  # 24-Hour EventBridge Rules for Daily Nuggets
  # Users can choose any hour (00:00-23:00) for delivery in their timezone
  
  # Hour 00:00 UTC
  EventBridgeRuleHour00:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-00
      Description: "Daily Nuggets for 00:00 delivery preference"
      ScheduleExpression: "cron(0 0 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour00"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":0}}'

  # Hour 01:00 UTC  
  EventBridgeRuleHour01:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-01
      ScheduleExpression: "cron(0 1 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour01"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":1}}'

  # Hour 02:00 UTC
  EventBridgeRuleHour02:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-02
      ScheduleExpression: "cron(0 2 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour02"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":2}}'

  # Hour 03:00 UTC
  EventBridgeRuleHour03:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-03
      ScheduleExpression: "cron(0 3 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour03"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":3}}'

  # Hour 04:00 UTC
  EventBridgeRuleHour04:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-04
      ScheduleExpression: "cron(0 4 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour04"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":4}}'

  # Hour 05:00 UTC
  EventBridgeRuleHour05:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-05
      ScheduleExpression: "cron(0 5 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour05"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":5}}'

  # Hour 06:00 UTC
  EventBridgeRuleHour06:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-06
      ScheduleExpression: "cron(0 6 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour06"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":6}}'

  # Hour 07:00 UTC
  EventBridgeRuleHour07:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-07
      ScheduleExpression: "cron(0 7 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour07"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":7}}'

  # Hour 08:00 UTC
  EventBridgeRuleHour08:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-08
      ScheduleExpression: "cron(0 8 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour08"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":8}}'

  # Hour 09:00 UTC
  EventBridgeRuleHour09:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-09
      ScheduleExpression: "cron(0 9 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour09"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":9}}'

  # Hour 10:00 UTC
  EventBridgeRuleHour10:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-10
      ScheduleExpression: "cron(0 10 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour10"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":10}}'

  # Hour 11:00 UTC
  EventBridgeRuleHour11:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-11
      ScheduleExpression: "cron(0 11 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour11"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":11}}'

  # Hour 12:00 UTC
  EventBridgeRuleHour12:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-12
      ScheduleExpression: "cron(0 12 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour12"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":12}}'

  # Hour 13:00 UTC
  EventBridgeRuleHour13:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-13
      ScheduleExpression: "cron(0 13 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour13"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":13}}'

  # Hour 14:00 UTC
  EventBridgeRuleHour14:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-14
      ScheduleExpression: "cron(0 14 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour14"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":14}}'

  # Hour 15:00 UTC
  EventBridgeRuleHour15:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-15
      ScheduleExpression: "cron(0 15 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour15"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":15}}'

  # Hour 16:00 UTC
  EventBridgeRuleHour16:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-16
      ScheduleExpression: "cron(0 16 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour16"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":16}}'

  # Hour 17:00 UTC
  EventBridgeRuleHour17:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-17
      ScheduleExpression: "cron(0 17 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour17"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":17}}'

  # Hour 18:00 UTC
  EventBridgeRuleHour18:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-18
      ScheduleExpression: "cron(0 18 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour18"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":18}}'

  # Hour 19:00 UTC
  EventBridgeRuleHour19:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-19
      ScheduleExpression: "cron(0 19 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour19"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":19}}'

  # Hour 20:00 UTC
  EventBridgeRuleHour20:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-20
      ScheduleExpression: "cron(0 20 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour20"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":20}}'

  # Hour 21:00 UTC
  EventBridgeRuleHour21:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-21
      ScheduleExpression: "cron(0 21 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour21"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":21}}'

  # Hour 22:00 UTC
  EventBridgeRuleHour22:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-22
      ScheduleExpression: "cron(0 22 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour22"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":22}}'

  # Hour 23:00 UTC
  EventBridgeRuleHour23:
    Type: AWS::Events::Rule
    Properties:
      Name: daily-nuggets-hour-23
      ScheduleExpression: "cron(0 23 * * ? *)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt NotificationBatcherFunction.Arn
          Id: "BatcherHour23"
          Input: '{"source":"aws.scheduler","detail":{"hour_utc":23}}'

  # Lambda Permissions for all 24 EventBridge Rules
  NotificationBatcherPermissionHour00:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour00.Arn

  NotificationBatcherPermissionHour01:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour01.Arn

  NotificationBatcherPermissionHour02:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour02.Arn

  NotificationBatcherPermissionHour03:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour03.Arn

  NotificationBatcherPermissionHour04:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour04.Arn

  NotificationBatcherPermissionHour05:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour05.Arn

  NotificationBatcherPermissionHour06:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour06.Arn

  NotificationBatcherPermissionHour07:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour07.Arn

  NotificationBatcherPermissionHour08:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour08.Arn

  NotificationBatcherPermissionHour09:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour09.Arn

  NotificationBatcherPermissionHour10:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour10.Arn

  NotificationBatcherPermissionHour11:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour11.Arn

  NotificationBatcherPermissionHour12:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour12.Arn

  NotificationBatcherPermissionHour13:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour13.Arn

  NotificationBatcherPermissionHour14:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour14.Arn

  NotificationBatcherPermissionHour15:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour15.Arn

  NotificationBatcherPermissionHour16:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour16.Arn

  NotificationBatcherPermissionHour17:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour17.Arn

  NotificationBatcherPermissionHour18:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour18.Arn

  NotificationBatcherPermissionHour19:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour19.Arn

  NotificationBatcherPermissionHour20:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour20.Arn

  NotificationBatcherPermissionHour21:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour21.Arn

  NotificationBatcherPermissionHour22:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour22.Arn

  NotificationBatcherPermissionHour23:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref NotificationBatcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleHour23.Arn